from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from aiogram import F, Router
from aiogram.fsm.state import State, StatesGroup
from keyboards.reply_kb import back_button_kb, drive_menu
from services.google_sheets import add_record

router = Router()


class ExpenseState(StatesGroup):
    """"–ö–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π —Ä–∞—Å—Ö–æ–¥–æ–≤"""

    waiting_for_amount_and_comment = State()


@router.message(F.text == '–†–∞—Å—Ö–æ–¥')
async def expense(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã '–†–∞—Å—Ö–æ–¥'"""

    await message.answer(
        '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ä–∞—Å—Ö–æ–¥—É:\n–ü—Ä–∏–º–µ—Ä:\n`20.70 –ó–∞–ø—Ä–∞–≤–∫–∞`',
        reply_markup=back_button_kb(),
        parse_mode='Markdown',
    )

    await state.set_state(ExpenseState.waiting_for_amount_and_comment)


@router.message(F.text == 'üîô –ù–∞–∑–∞–¥', ExpenseState.waiting_for_amount_and_comment)
async def back_to_main_menu(message: Message, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""

    await state.clear()
    await message.answer(text='–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...', reply_markup=drive_menu())


@router.message(ExpenseState.waiting_for_amount_and_comment)
async def get_expense_info(message: Message, state: FSMContext):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞—Å—Ö–æ–¥–µ –≤ –≤–∏–¥–µ —Å—É–º–º—ã –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"""

    text = message.text.strip()
    parts = text.split(' ', 1)

    try:
        amount = float(parts[0].replace(',', '.'))
        comment = parts[1] if len(parts) > 1 else ''

        add_record(
            user_id=message.from_user.id,
            username=message.from_user.full_name,
            record_type='—Ä–∞—Å—Ö–æ–¥',
            subcategory='-',
            amount=amount,
            comment=comment
        )

        await message.answer(text=f'–†–∞—Å—Ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω:\n{amount}\n{comment}')
        await state.clear()
    except ValueError:
        await message.answer(
            text='–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ –ø—Ä–∏–º–µ—Ä—É:\n`20.70 –ó–∞–ø—Ä–∞–≤–∫–∞`',
            parse_mode='Markdown')

