from aiogram.types import Message
from aiogram import F, Router
from keyboards.reply_kb import drive_menu, admin_menu, button_get_id, contact_with_admin_kb
from utils.auth import check_admin, check_driver, get_admin_id

router = Router()


@router.message(F.text == "/start")
async def start(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""

    await message.answer(text="üëã –ü—Ä–∏–≤–µ—Ç,\n–ü–æ–ª—É—á–∏—Ç–µ –≤–∞—à ID", reply_markup=button_get_id())


@router.message(F.text == "üîç –ü–æ–ª—É—á–∏—Ç—å ID")
async def get_id(message: Message):
    user_id = message.from_user.id
    if check_admin(user_id):
        await message.answer("üëã –ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω!", reply_markup=admin_menu())

    elif check_driver(user_id):
        await message.answer("üëã –ü—Ä–∏–≤–µ—Ç, –≤–æ–¥–∏—Ç–µ–ª—å!", reply_markup=drive_menu())
    else:
        tg_id = message.from_user.id
        await message.answer(
            f"–í–∞—à ID: `{tg_id}`\n–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ",
            reply_markup=contact_with_admin_kb(),
            parse_mode="Markdown",)


@router.message(F.text == "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
async def contact_with_administrator(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""

    user_id = message.from_user.id
    user_name = message.from_user.full_name
    username = f"@{message.from_user.username}" if message.from_user.username else "–ù–µ —É–∫–∞–∑–∞–Ω"

    admin_message = (
        f"üìû –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–≤—è–∑—å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n"
        f"üë§ –ò–º—è: {user_name}\n"
        f"üÜî ID: {user_id}\n"
        f"üì± Username: {username}\n"
        f"‚è∞ –í—Ä–µ–º—è: {message.date.strftime('%d.%m.%Y %H:%M')}"
    )

    admin_id = get_admin_id()
    try:
        await message.bot.send_message(admin_id, admin_message)
        await message.answer("‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!\n–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.")

    except Exception as e:
        return print(f"Error{e}")